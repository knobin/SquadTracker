name: MSBuild

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - '**/manifest.json'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        path: ./bin/x64/Release/SquadTracker.bhm

  pre-release:
    name: Pre Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v3
    
    - name: Unzip BHM
      shell: bash
      run: |
        unzip /home/runner/work/SquadTracker/SquadTracker/artifact/SquadTracker.bhm

    - name: Parse manifest version
      id: project-version
      uses: euberdeveloper/ga-project-version@main
      with:
        path: ./manifest.json

    - uses: marvinpinto/action-automatic-releases@latest
      with: 
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        files: |
          /home/runner/work/SquadTracker/SquadTracker/artifact/SquadTracker.bhm
        automatic_release_tag: "v${{ steps.project-version.outputs.version }}"

  publish-manifest:
    name: Publish Manifest
    runs-on: windows-latest
    needs: pre-release
    
    steps:
    - uses: actions/download-artifact@v3
    
    - name: Unzip BHM
      shell: bash
      run: |
        unzip D:\\a\\SquadTracker\\SquadTracker\\artifact\\SquadTracker.bhm

    - name: Parse manifest version
      id: project-version
      uses: euberdeveloper/ga-project-version@main
      with:
        path: ./manifest.json
    
    - name: Create Manifest
      shell: powershell
      run: |
        git clone https://github.com/tcwatson/bhud-pkgs.git
        cd bhud-pkgs
        git checkout -b "squadtracker_v${{ steps.project-version.outputs.version }}"
        Install-Module BhudLib -force
        Import-Module BhudLib
        $module = Get-BhudModule -Url "https://github.com/tcwatson/SquadTracker/releases/download/v${{ steps.project-version.outputs.version }}/SquadTracker.bhm"
        $pkg = Build-BhudPkgManifest -Url "https://github.com/tcwatson/SquadTracker/releases/download/v${{ steps.project-version.outputs.version }}/SquadTracker.bhm"
        Save-BhudPackage -Pkg $pkg -RepoRoot ".\manifests"
        git add -A
        git commit -S -m "SquadTracker v${{ steps.project-version.outputs.version }}"
        git push -u origin squadtracker_v${{ steps.project-version.outputs.version }}

   
